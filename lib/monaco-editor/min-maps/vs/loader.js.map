{"version":3,"sources":["vs/loader.js"],"names":["define","AMDLoader","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","length","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","result","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","i","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","len","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","getConfig","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","document","createElement","setAttribute","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","moduleExports_2","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","isElectronRenderer","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","warn","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","_nodeRequire_1","what","doNotInitLoader"],"mappings":"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","file":"loader.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.19.2(cbc4d780bb9aaeddd3e1a54c9bec13deacc04d63)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/*---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _amdLoaderGlobal = this;\r\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    AMDLoader.global = _amdLoaderGlobal;\r\n    var Environment = /** @class */ (function () {\r\n        function Environment() {\r\n            this._detected = false;\r\n            this._isWindows = false;\r\n            this._isNode = false;\r\n            this._isElectronRenderer = false;\r\n            this._isWebWorker = false;\r\n        }\r\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWindows;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isNode\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isNode;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isElectronRenderer;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWebWorker;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Environment.prototype._detect = function () {\r\n            if (this._detected) {\r\n                return;\r\n            }\r\n            this._detected = true;\r\n            this._isWindows = Environment._isWindows();\r\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\r\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\r\n        };\r\n        Environment._isWindows = function () {\r\n            if (typeof navigator !== 'undefined') {\r\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (typeof process !== 'undefined') {\r\n                return (process.platform === 'win32');\r\n            }\r\n            return false;\r\n        };\r\n        return Environment;\r\n    }());\r\n    AMDLoader.Environment = Environment;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var LoaderEvent = /** @class */ (function () {\r\n        function LoaderEvent(type, detail, timestamp) {\r\n            this.type = type;\r\n            this.detail = detail;\r\n            this.timestamp = timestamp;\r\n        }\r\n        return LoaderEvent;\r\n    }());\r\n    AMDLoader.LoaderEvent = LoaderEvent;\r\n    var LoaderEventRecorder = /** @class */ (function () {\r\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\r\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\r\n        }\r\n        LoaderEventRecorder.prototype.record = function (type, detail) {\r\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\r\n        };\r\n        LoaderEventRecorder.prototype.getEvents = function () {\r\n            return this._events;\r\n        };\r\n        return LoaderEventRecorder;\r\n    }());\r\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\r\n    var NullLoaderEventRecorder = /** @class */ (function () {\r\n        function NullLoaderEventRecorder() {\r\n        }\r\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\r\n            // Nothing to do\r\n        };\r\n        NullLoaderEventRecorder.prototype.getEvents = function () {\r\n            return [];\r\n        };\r\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\r\n        return NullLoaderEventRecorder;\r\n    }());\r\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var Utilities = /** @class */ (function () {\r\n        function Utilities() {\r\n        }\r\n        /**\r\n         * This method does not take care of / vs \\\r\n         */\r\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\r\n            uri = decodeURI(uri).replace(/%23/g, '#');\r\n            if (isWindows) {\r\n                if (/^file:\\/\\/\\//.test(uri)) {\r\n                    // This is a URI without a hostname => return only the path segment\r\n                    return uri.substr(8);\r\n                }\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(5);\r\n                }\r\n            }\r\n            else {\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(7);\r\n                }\r\n            }\r\n            // Not sure...\r\n            return uri;\r\n        };\r\n        Utilities.startsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\r\n        };\r\n        Utilities.endsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\r\n        };\r\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\r\n        Utilities.containsQueryString = function (url) {\r\n            return /^[^\\#]*\\?/gi.test(url);\r\n        };\r\n        /**\r\n         * Does `url` start with http:// or https:// or file:// or / ?\r\n         */\r\n        Utilities.isAbsolutePath = function (url) {\r\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\r\n        };\r\n        Utilities.forEachProperty = function (obj, callback) {\r\n            if (obj) {\r\n                var key = void 0;\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        callback(key, obj[key]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Utilities.isEmpty = function (obj) {\r\n            var isEmpty = true;\r\n            Utilities.forEachProperty(obj, function () {\r\n                isEmpty = false;\r\n            });\r\n            return isEmpty;\r\n        };\r\n        Utilities.recursiveClone = function (obj) {\r\n            if (!obj || typeof obj !== 'object') {\r\n                return obj;\r\n            }\r\n            var result = Array.isArray(obj) ? [] : {};\r\n            Utilities.forEachProperty(obj, function (key, value) {\r\n                if (value && typeof value === 'object') {\r\n                    result[key] = Utilities.recursiveClone(value);\r\n                }\r\n                else {\r\n                    result[key] = value;\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        Utilities.generateAnonymousModule = function () {\r\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\r\n        };\r\n        Utilities.isAnonymousModule = function (id) {\r\n            return Utilities.startsWith(id, '===anonymous');\r\n        };\r\n        Utilities.getHighPerformanceTimestamp = function () {\r\n            if (!this.PERFORMANCE_NOW_PROBED) {\r\n                this.PERFORMANCE_NOW_PROBED = true;\r\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\r\n            }\r\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\r\n        };\r\n        Utilities.NEXT_ANONYMOUS_ID = 1;\r\n        Utilities.PERFORMANCE_NOW_PROBED = false;\r\n        Utilities.HAS_PERFORMANCE_NOW = false;\r\n        return Utilities;\r\n    }());\r\n    AMDLoader.Utilities = Utilities;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    function ensureError(err) {\r\n        if (err instanceof Error) {\r\n            return err;\r\n        }\r\n        var result = new Error(err.message || String(err) || 'Unknown Error');\r\n        if (err.stack) {\r\n            result.stack = err.stack;\r\n        }\r\n        return result;\r\n    }\r\n    AMDLoader.ensureError = ensureError;\r\n    ;\r\n    var ConfigurationOptionsUtil = /** @class */ (function () {\r\n        function ConfigurationOptionsUtil() {\r\n        }\r\n        /**\r\n         * Ensure configuration options make sense\r\n         */\r\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\r\n            function defaultOnError(err) {\r\n                if (err.phase === 'loading') {\r\n                    console.error('Loading \"' + err.moduleId + '\" failed');\r\n                    console.error(err);\r\n                    console.error('Here are the modules that depend on it:');\r\n                    console.error(err.neededBy);\r\n                    return;\r\n                }\r\n                if (err.phase === 'factory') {\r\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n            }\r\n            options = options || {};\r\n            if (typeof options.baseUrl !== 'string') {\r\n                options.baseUrl = '';\r\n            }\r\n            if (typeof options.isBuild !== 'boolean') {\r\n                options.isBuild = false;\r\n            }\r\n            if (typeof options.paths !== 'object') {\r\n                options.paths = {};\r\n            }\r\n            if (typeof options.config !== 'object') {\r\n                options.config = {};\r\n            }\r\n            if (typeof options.catchError === 'undefined') {\r\n                options.catchError = false;\r\n            }\r\n            if (typeof options.recordStats === 'undefined') {\r\n                options.recordStats = false;\r\n            }\r\n            if (typeof options.urlArgs !== 'string') {\r\n                options.urlArgs = '';\r\n            }\r\n            if (typeof options.onError !== 'function') {\r\n                options.onError = defaultOnError;\r\n            }\r\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\r\n                options.ignoreDuplicateModules = [];\r\n            }\r\n            if (options.baseUrl.length > 0) {\r\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\r\n                    options.baseUrl += '/';\r\n                }\r\n            }\r\n            if (typeof options.cspNonce !== 'string') {\r\n                options.cspNonce = '';\r\n            }\r\n            if (!Array.isArray(options.nodeModules)) {\r\n                options.nodeModules = [];\r\n            }\r\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\r\n                if (typeof options.nodeCachedData.seed !== 'string') {\r\n                    options.nodeCachedData.seed = 'seed';\r\n                }\r\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\r\n                    options.nodeCachedData.writeDelay = 1000 * 7;\r\n                }\r\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\r\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\r\n                    err.phase = 'configuration';\r\n                    options.onError(err);\r\n                    options.nodeCachedData = undefined;\r\n                }\r\n            }\r\n            return options;\r\n        };\r\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\r\n            if (overwrite === void 0) { overwrite = null; }\r\n            if (base === void 0) { base = null; }\r\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\r\n            // Merge known properties and overwrite the unknown ones\r\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\r\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\r\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\r\n                }\r\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\r\n                }\r\n                else if (key === 'config' && typeof result.config !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\r\n                }\r\n                else {\r\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\r\n                }\r\n            });\r\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\r\n        };\r\n        return ConfigurationOptionsUtil;\r\n    }());\r\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\r\n    var Configuration = /** @class */ (function () {\r\n        function Configuration(env, options) {\r\n            this._env = env;\r\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\r\n            this._createIgnoreDuplicateModulesMap();\r\n            this._createNodeModulesMap();\r\n            this._createSortedPathsRules();\r\n            if (this.options.baseUrl === '') {\r\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeRequire.main.filename;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n                if (this.options.nodeMain && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeMain;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\r\n            // Build a map out of the ignoreDuplicateModules array\r\n            this.ignoreDuplicateModulesMap = {};\r\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\r\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createNodeModulesMap = function () {\r\n            // Build a map out of nodeModules array\r\n            this.nodeModulesMap = Object.create(null);\r\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\r\n                var nodeModule = _a[_i];\r\n                this.nodeModulesMap[nodeModule] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createSortedPathsRules = function () {\r\n            var _this = this;\r\n            // Create an array our of the paths rules, sorted descending by length to\r\n            // result in a more specific -> less specific order\r\n            this.sortedPathsRules = [];\r\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\r\n                if (!Array.isArray(to)) {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: [to]\r\n                    });\r\n                }\r\n                else {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: to\r\n                    });\r\n                }\r\n            });\r\n            this.sortedPathsRules.sort(function (a, b) {\r\n                return b.from.length - a.from.length;\r\n            });\r\n        };\r\n        /**\r\n         * Clone current configuration and overwrite options selectively.\r\n         * @param options The selective options to overwrite with.\r\n         * @result A new configuration\r\n         */\r\n        Configuration.prototype.cloneAndMerge = function (options) {\r\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\r\n        };\r\n        /**\r\n         * Get current options bag. Useful for passing it forward to plugins.\r\n         */\r\n        Configuration.prototype.getOptionsLiteral = function () {\r\n            return this.options;\r\n        };\r\n        Configuration.prototype._applyPaths = function (moduleId) {\r\n            var pathRule;\r\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\r\n                pathRule = this.sortedPathsRules[i];\r\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\r\n                    var result = [];\r\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\r\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n            return [moduleId];\r\n        };\r\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\r\n            if (AMDLoader.Utilities.containsQueryString(url)) {\r\n                return url + '&' + this.options.urlArgs;\r\n            }\r\n            else {\r\n                return url + '?' + this.options.urlArgs;\r\n            }\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\r\n            if (this.options.urlArgs) {\r\n                return this._addUrlArgsToUrl(url);\r\n            }\r\n            return url;\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\r\n            if (this.options.urlArgs) {\r\n                for (var i = 0, len = urls.length; i < len; i++) {\r\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\r\n                }\r\n            }\r\n            return urls;\r\n        };\r\n        /**\r\n         * Transform a module id to a location. Appends .js to module ids\r\n         */\r\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\r\n            if (this.nodeModulesMap[moduleId] === true) {\r\n                // This is a node module...\r\n                if (this.isBuild()) {\r\n                    // ...and we are at build time, drop it\r\n                    return ['empty:'];\r\n                }\r\n                else {\r\n                    // ...and at runtime we create a `shortcut`-path\r\n                    return ['node|' + moduleId];\r\n                }\r\n            }\r\n            var result = moduleId;\r\n            var results;\r\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                results = this._applyPaths(result);\r\n                for (var i = 0, len = results.length; i < len; i++) {\r\n                    if (this.isBuild() && results[i] === 'empty:') {\r\n                        continue;\r\n                    }\r\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\r\n                        results[i] = this.options.baseUrl + results[i];\r\n                    }\r\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\r\n                        results[i] = results[i] + '.js';\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\r\n                    result = result + '.js';\r\n                }\r\n                results = [result];\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrls(results);\r\n        };\r\n        /**\r\n         * Transform a module id or url to a location.\r\n         */\r\n        Configuration.prototype.requireToUrl = function (url) {\r\n            var result = url;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                result = this._applyPaths(result)[0];\r\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                    result = this.options.baseUrl + result;\r\n                }\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrl(result);\r\n        };\r\n        /**\r\n         * Flag to indicate if current execution is as part of a build.\r\n         */\r\n        Configuration.prototype.isBuild = function () {\r\n            return this.options.isBuild;\r\n        };\r\n        /**\r\n         * Test if module `moduleId` is expected to be defined multiple times\r\n         */\r\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\r\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\r\n        };\r\n        /**\r\n         * Get the configuration settings for the provided module id\r\n         */\r\n        Configuration.prototype.getConfigForModule = function (moduleId) {\r\n            if (this.options.config) {\r\n                return this.options.config[moduleId];\r\n            }\r\n        };\r\n        /**\r\n         * Should errors be caught when executing module factories?\r\n         */\r\n        Configuration.prototype.shouldCatchError = function () {\r\n            return this.options.catchError;\r\n        };\r\n        /**\r\n         * Should statistics be recorded?\r\n         */\r\n        Configuration.prototype.shouldRecordStats = function () {\r\n            return this.options.recordStats;\r\n        };\r\n        /**\r\n         * Forward an error to the error handler.\r\n         */\r\n        Configuration.prototype.onError = function (err) {\r\n            this.options.onError(err);\r\n        };\r\n        return Configuration;\r\n    }());\r\n    AMDLoader.Configuration = Configuration;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    /**\r\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\r\n     */\r\n    var OnlyOnceScriptLoader = /** @class */ (function () {\r\n        function OnlyOnceScriptLoader(env) {\r\n            this._env = env;\r\n            this._scriptLoader = null;\r\n            this._callbackMap = {};\r\n        }\r\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            if (!this._scriptLoader) {\r\n                this._scriptLoader = (this._env.isWebWorker\r\n                    ? new WorkerScriptLoader()\r\n                    : this._env.isNode\r\n                        ? new NodeScriptLoader(this._env)\r\n                        : new BrowserScriptLoader());\r\n            }\r\n            var scriptCallbacks = {\r\n                callback: callback,\r\n                errorback: errorback\r\n            };\r\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\r\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\r\n                return;\r\n            }\r\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\r\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].callback();\r\n            }\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].errorback(err);\r\n            }\r\n        };\r\n        return OnlyOnceScriptLoader;\r\n    }());\r\n    var BrowserScriptLoader = /** @class */ (function () {\r\n        function BrowserScriptLoader() {\r\n        }\r\n        /**\r\n         * Attach load / error listeners to a script element and remove them when either one has fired.\r\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\r\n         */\r\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\r\n            var unbind = function () {\r\n                script.removeEventListener('load', loadEventListener);\r\n                script.removeEventListener('error', errorEventListener);\r\n            };\r\n            var loadEventListener = function (e) {\r\n                unbind();\r\n                callback();\r\n            };\r\n            var errorEventListener = function (e) {\r\n                unbind();\r\n                errorback(e);\r\n            };\r\n            script.addEventListener('load', loadEventListener);\r\n            script.addEventListener('error', errorEventListener);\r\n        };\r\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var opts = moduleManager.getConfig().getOptionsLiteral();\r\n                var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_1 = null;\r\n                try {\r\n                    moduleExports_1 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\r\n                callback();\r\n            }\r\n            else {\r\n                var script = document.createElement('script');\r\n                script.setAttribute('async', 'async');\r\n                script.setAttribute('type', 'text/javascript');\r\n                this.attachListeners(script, callback, errorback);\r\n                script.setAttribute('src', scriptSrc);\r\n                // Propagate CSP nonce to dynamically created script tag.\r\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\r\n                if (cspNonce) {\r\n                    script.setAttribute('nonce', cspNonce);\r\n                }\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        };\r\n        return BrowserScriptLoader;\r\n    }());\r\n    var WorkerScriptLoader = /** @class */ (function () {\r\n        function WorkerScriptLoader() {\r\n        }\r\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            try {\r\n                importScripts(scriptSrc);\r\n                callback();\r\n            }\r\n            catch (e) {\r\n                errorback(e);\r\n            }\r\n        };\r\n        return WorkerScriptLoader;\r\n    }());\r\n    var NodeScriptLoader = /** @class */ (function () {\r\n        function NodeScriptLoader(env) {\r\n            this._env = env;\r\n            this._didInitialize = false;\r\n            this._didPatchNodeRequire = false;\r\n        }\r\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\r\n            if (this._didInitialize) {\r\n                return;\r\n            }\r\n            this._didInitialize = true;\r\n            // capture node modules\r\n            this._fs = nodeRequire('fs');\r\n            this._vm = nodeRequire('vm');\r\n            this._path = nodeRequire('path');\r\n            this._crypto = nodeRequire('crypto');\r\n        };\r\n        // patch require-function of nodejs such that we can manually create a script\r\n        // from cached data. this is done by overriding the `Module._compile` function\r\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\r\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\r\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\r\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\r\n            if (!nodeCachedData) {\r\n                return;\r\n            }\r\n            if (this._didPatchNodeRequire) {\r\n                return;\r\n            }\r\n            this._didPatchNodeRequire = true;\r\n            var that = this;\r\n            var Module = nodeRequire('module');\r\n            function makeRequireFunction(mod) {\r\n                var Module = mod.constructor;\r\n                var require = function require(path) {\r\n                    try {\r\n                        return mod.require(path);\r\n                    }\r\n                    finally {\r\n                        // nothing\r\n                    }\r\n                };\r\n                require.resolve = function resolve(request) {\r\n                    return Module._resolveFilename(request, mod);\r\n                };\r\n                require.main = process.mainModule;\r\n                require.extensions = Module._extensions;\r\n                require.cache = Module._cache;\r\n                return require;\r\n            }\r\n            Module.prototype._compile = function (content, filename) {\r\n                // remove shebang and create wrapper function\r\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\r\n                // create script\r\n                var recorder = moduleManager.getRecorder();\r\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\r\n                var options = { filename: filename };\r\n                var hashData;\r\n                try {\r\n                    var data = that._fs.readFileSync(cachedDataPath);\r\n                    hashData = data.slice(0, 16);\r\n                    options.cachedData = data.slice(16);\r\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                }\r\n                catch (_e) {\r\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                }\r\n                var script = new that._vm.Script(scriptSource, options);\r\n                var compileWrapper = script.runInThisContext(options);\r\n                // run script\r\n                var dirname = that._path.dirname(filename);\r\n                var require = makeRequireFunction(this);\r\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\r\n                var result = compileWrapper.apply(this.exports, args);\r\n                // cached data aftermath\r\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\r\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\r\n                return result;\r\n            };\r\n        };\r\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            var opts = moduleManager.getConfig().getOptionsLiteral();\r\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\r\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\r\n            this._init(nodeRequire);\r\n            this._initNodeRequire(nodeRequire, moduleManager);\r\n            var recorder = moduleManager.getRecorder();\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_2 = null;\r\n                try {\r\n                    moduleExports_2 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\r\n                callback();\r\n            }\r\n            else {\r\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\r\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\r\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\r\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\r\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\r\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\r\n                    if (err) {\r\n                        errorback(err);\r\n                        return;\r\n                    }\r\n                    var scriptSource;\r\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    else {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\r\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\r\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\r\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\r\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\r\n            var recorder = moduleManager.getRecorder();\r\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\r\n            var script = new this._vm.Script(contents, options);\r\n            var ret = script.runInThisContext(options);\r\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\r\n            var receivedDefineCall = false;\r\n            var localDefineFunc = function () {\r\n                receivedDefineCall = true;\r\n                return globalDefineFunc.apply(null, arguments);\r\n            };\r\n            localDefineFunc.amd = globalDefineFunc.amd;\r\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\r\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\r\n            if (receivedDefineCall) {\r\n                callback();\r\n            }\r\n            else {\r\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\r\n            }\r\n            return script;\r\n        };\r\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\r\n            if (!this._env.isElectronRenderer) {\r\n                return path;\r\n            }\r\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\r\n            if (driveLetterMatch) {\r\n                // windows\r\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\r\n            }\r\n            else {\r\n                // nix\r\n                return \"file://\" + path;\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\r\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\r\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\r\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\r\n        };\r\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\r\n            var _this = this;\r\n            if (script.cachedDataRejected) {\r\n                // cached data got rejected -> delete and re-create\r\n                this._fs.unlink(cachedDataPath, function (err) {\r\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\r\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n                    if (err) {\r\n                        moduleManager.getConfig().onError(err);\r\n                    }\r\n                });\r\n            }\r\n            else if (createCachedData) {\r\n                // no cached data, but wanted\r\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n            }\r\n        };\r\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\r\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\r\n        // -V8_CACHED_DATA is what v8 produces\r\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\r\n            var _this = this;\r\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\r\n            var lastSize = -1;\r\n            var iteration = 0;\r\n            var hashData = undefined;\r\n            var createLoop = function () {\r\n                setTimeout(function () {\r\n                    if (!hashData) {\r\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                    }\r\n                    var cachedData = script.createCachedData();\r\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\r\n                        return;\r\n                    }\r\n                    lastSize = cachedData.length;\r\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\r\n                        createLoop();\r\n                    });\r\n                }, timeout * (Math.pow(4, iteration++)));\r\n            };\r\n            // with some delay (`timeout`) create cached data\r\n            // and repeat that (with backoff delay) until the\r\n            // data seems to be not changing anymore\r\n            createLoop();\r\n        };\r\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\r\n            if (!cachedDataPath) {\r\n                // no cached data case\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\r\n            }\r\n            else {\r\n                // cached data case: read both files in parallel\r\n                var source_1 = undefined;\r\n                var cachedData_1 = undefined;\r\n                var hashData_1 = undefined;\r\n                var steps_1 = 2;\r\n                var step_1 = function (err) {\r\n                    if (err) {\r\n                        callback(err);\r\n                    }\r\n                    else if (--steps_1 === 0) {\r\n                        callback(undefined, source_1, cachedData_1, hashData_1);\r\n                    }\r\n                };\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\r\n                    source_1 = data;\r\n                    step_1(err);\r\n                });\r\n                this._fs.readFile(cachedDataPath, function (err, data) {\r\n                    if (!err && data && data.length > 0) {\r\n                        hashData_1 = data.slice(0, 16);\r\n                        cachedData_1 = data.slice(16);\r\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                    }\r\n                    else {\r\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                    }\r\n                    step_1(); // ignored: cached data is optional\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\r\n            var _this = this;\r\n            if (!hashData) {\r\n                // nothing to do\r\n                return;\r\n            }\r\n            if (script.cachedDataRejected) {\r\n                // invalid anyways\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                // check source hash - the contract is that file paths change when file content\r\n                // change (e.g use the commit or version id as cache path). this check is\r\n                // for violations of this contract.\r\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                if (!hashData.equals(hashDataNow)) {\r\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\r\n                    _this._fs.unlink(cachedDataPath, function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                    });\r\n                }\r\n            }, Math.ceil(5000 * (1 + Math.random())));\r\n        };\r\n        NodeScriptLoader._BOM = 0xFEFF;\r\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\r\n        NodeScriptLoader._SUFFIX = '\\n});';\r\n        return NodeScriptLoader;\r\n    }());\r\n    function createScriptLoader(env) {\r\n        return new OnlyOnceScriptLoader(env);\r\n    }\r\n    AMDLoader.createScriptLoader = createScriptLoader;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    // ------------------------------------------------------------------------\r\n    // ModuleIdResolver\r\n    var ModuleIdResolver = /** @class */ (function () {\r\n        function ModuleIdResolver(fromModuleId) {\r\n            var lastSlash = fromModuleId.lastIndexOf('/');\r\n            if (lastSlash !== -1) {\r\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\r\n            }\r\n            else {\r\n                this.fromModulePath = '';\r\n            }\r\n        }\r\n        /**\r\n         * Normalize 'a/../name' to 'name', etc.\r\n         */\r\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\r\n            var r = moduleId, pattern;\r\n            // replace /./ => /\r\n            pattern = /\\/\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^./ => nothing\r\n            r = r.replace(/^\\.\\//g, '');\r\n            // replace /aa/../ => / (BUT IGNORE /../../)\r\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\r\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\r\n            return r;\r\n        };\r\n        /**\r\n         * Resolve relative module ids\r\n         */\r\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\r\n            var result = moduleId;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\r\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\r\n        return ModuleIdResolver;\r\n    }());\r\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\r\n    // ------------------------------------------------------------------------\r\n    // Module\r\n    var Module = /** @class */ (function () {\r\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\r\n            this.id = id;\r\n            this.strId = strId;\r\n            this.dependencies = dependencies;\r\n            this._callback = callback;\r\n            this._errorback = errorback;\r\n            this.moduleIdResolver = moduleIdResolver;\r\n            this.exports = {};\r\n            this.error = null;\r\n            this.exportsPassedIn = false;\r\n            this.unresolvedDependenciesCount = this.dependencies.length;\r\n            this._isComplete = false;\r\n        }\r\n        Module._safeInvokeFunction = function (callback, args) {\r\n            try {\r\n                return {\r\n                    returnedValue: callback.apply(AMDLoader.global, args),\r\n                    producedError: null\r\n                };\r\n            }\r\n            catch (e) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: e\r\n                };\r\n            }\r\n        };\r\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\r\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: null\r\n                };\r\n            }\r\n            if (config.shouldCatchError()) {\r\n                return this._safeInvokeFunction(callback, dependenciesValues);\r\n            }\r\n            return {\r\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\r\n                producedError: null\r\n            };\r\n        };\r\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\r\n            this._isComplete = true;\r\n            var producedError = null;\r\n            if (this._callback) {\r\n                if (typeof this._callback === 'function') {\r\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\r\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\r\n                    producedError = r.producedError;\r\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\r\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\r\n                        this.exports = r.returnedValue;\r\n                    }\r\n                }\r\n                else {\r\n                    this.exports = this._callback;\r\n                }\r\n            }\r\n            if (producedError) {\r\n                var err = AMDLoader.ensureError(producedError);\r\n                err.phase = 'factory';\r\n                err.moduleId = this.strId;\r\n                this.error = err;\r\n                config.onError(err);\r\n            }\r\n            this.dependencies = null;\r\n            this._callback = null;\r\n            this._errorback = null;\r\n            this.moduleIdResolver = null;\r\n        };\r\n        /**\r\n         * One of the direct dependencies or a transitive dependency has failed to load.\r\n         */\r\n        Module.prototype.onDependencyError = function (err) {\r\n            this._isComplete = true;\r\n            this.error = err;\r\n            if (this._errorback) {\r\n                this._errorback(err);\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Is the current module complete?\r\n         */\r\n        Module.prototype.isComplete = function () {\r\n            return this._isComplete;\r\n        };\r\n        return Module;\r\n    }());\r\n    AMDLoader.Module = Module;\r\n    var ModuleIdProvider = /** @class */ (function () {\r\n        function ModuleIdProvider() {\r\n            this._nextId = 0;\r\n            this._strModuleIdToIntModuleId = new Map();\r\n            this._intModuleIdToStrModuleId = [];\r\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\r\n            this.getModuleId('exports');\r\n            this.getModuleId('module');\r\n            this.getModuleId('require');\r\n        }\r\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\r\n            return this._nextId;\r\n        };\r\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\r\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\r\n            if (typeof id === 'undefined') {\r\n                id = this._nextId++;\r\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\r\n                this._intModuleIdToStrModuleId[id] = strModuleId;\r\n            }\r\n            return id;\r\n        };\r\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\r\n            return this._intModuleIdToStrModuleId[moduleId];\r\n        };\r\n        return ModuleIdProvider;\r\n    }());\r\n    var RegularDependency = /** @class */ (function () {\r\n        function RegularDependency(id) {\r\n            this.id = id;\r\n        }\r\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\r\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\r\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\r\n        return RegularDependency;\r\n    }());\r\n    AMDLoader.RegularDependency = RegularDependency;\r\n    var PluginDependency = /** @class */ (function () {\r\n        function PluginDependency(id, pluginId, pluginParam) {\r\n            this.id = id;\r\n            this.pluginId = pluginId;\r\n            this.pluginParam = pluginParam;\r\n        }\r\n        return PluginDependency;\r\n    }());\r\n    AMDLoader.PluginDependency = PluginDependency;\r\n    var ModuleManager = /** @class */ (function () {\r\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\r\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\r\n            this._env = env;\r\n            this._scriptLoader = scriptLoader;\r\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\r\n            this._defineFunc = defineFunc;\r\n            this._requireFunc = requireFunc;\r\n            this._moduleIdProvider = new ModuleIdProvider();\r\n            this._config = new AMDLoader.Configuration(this._env);\r\n            this._modules2 = [];\r\n            this._knownModules2 = [];\r\n            this._inverseDependencies2 = [];\r\n            this._inversePluginDependencies2 = new Map();\r\n            this._currentAnnonymousDefineCall = null;\r\n            this._recorder = null;\r\n            this._buildInfoPath = [];\r\n            this._buildInfoDefineStack = [];\r\n            this._buildInfoDependencies = [];\r\n        }\r\n        ModuleManager.prototype.reset = function () {\r\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\r\n            return this._defineFunc;\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\r\n            return this._requireFunc;\r\n        };\r\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\r\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\r\n            var normalizedPath = normalize(needle);\r\n            var stackPieces = stack.split(/\\n/);\r\n            for (var i = 0; i < stackPieces.length; i++) {\r\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\r\n                if (m) {\r\n                    var stackPath = m[1];\r\n                    var stackLine = m[2];\r\n                    var stackColumn = m[3];\r\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\r\n                    stackPath = stackPath.substr(trimPathOffset);\r\n                    stackPath = normalize(stackPath);\r\n                    if (stackPath === normalizedPath) {\r\n                        var r = {\r\n                            line: parseInt(stackLine, 10),\r\n                            col: parseInt(stackColumn, 10)\r\n                        };\r\n                        if (r.line === 1) {\r\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\r\n                        }\r\n                        return r;\r\n                    }\r\n                }\r\n            }\r\n            throw new Error('Could not correlate define call site for needle ' + needle);\r\n        };\r\n        ModuleManager.prototype.getBuildInfo = function () {\r\n            if (!this._config.isBuild()) {\r\n                return null;\r\n            }\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\r\n                var m = this._modules2[i];\r\n                if (!m) {\r\n                    continue;\r\n                }\r\n                var location_1 = this._buildInfoPath[m.id] || null;\r\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\r\n                var dependencies = this._buildInfoDependencies[m.id];\r\n                result[resultLen++] = {\r\n                    id: m.strId,\r\n                    path: location_1,\r\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\r\n                    dependencies: dependencies,\r\n                    shim: null,\r\n                    exports: m.exports\r\n                };\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype.getRecorder = function () {\r\n            if (!this._recorder) {\r\n                if (this._config.shouldRecordStats()) {\r\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\r\n                }\r\n                else {\r\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\r\n                }\r\n            }\r\n            return this._recorder;\r\n        };\r\n        ModuleManager.prototype.getLoaderEvents = function () {\r\n            return this.getRecorder().getEvents();\r\n        };\r\n        /**\r\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\r\n         * @param dependecies @see defineModule\r\n         * @param callback @see defineModule\r\n         */\r\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                throw new Error('Can only have one anonymous define call per script file');\r\n            }\r\n            var stack = null;\r\n            if (this._config.isBuild()) {\r\n                stack = new Error('StackLocation').stack || null;\r\n            }\r\n            this._currentAnnonymousDefineCall = {\r\n                stack: stack,\r\n                dependencies: dependencies,\r\n                callback: callback\r\n            };\r\n        };\r\n        /**\r\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\r\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\r\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\r\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\r\n         */\r\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\r\n            var _this = this;\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\r\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\r\n            if (this._modules2[moduleId]) {\r\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\r\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\r\n                }\r\n                // Super important! Completely ignore duplicate module definition\r\n                return;\r\n            }\r\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\r\n            this._modules2[moduleId] = m;\r\n            if (this._config.isBuild()) {\r\n                this._buildInfoDefineStack[moduleId] = stack;\r\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\r\n            }\r\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\r\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\r\n            this._resolve(m);\r\n        };\r\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\r\n            if (dependency === 'exports') {\r\n                return RegularDependency.EXPORTS;\r\n            }\r\n            if (dependency === 'module') {\r\n                return RegularDependency.MODULE;\r\n            }\r\n            if (dependency === 'require') {\r\n                return RegularDependency.REQUIRE;\r\n            }\r\n            // Normalize dependency and then request it from the manager\r\n            var bangIndex = dependency.indexOf('!');\r\n            if (bangIndex >= 0) {\r\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\r\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\r\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\r\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\r\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\r\n            }\r\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\r\n        };\r\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\r\n            if (typeof dependencies === 'string') {\r\n                return this.synchronousRequire(dependencies, moduleIdResolver);\r\n            }\r\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\r\n        };\r\n        /**\r\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\r\n         * @param id The unique and absolute id of the required module\r\n         * @return The exports of module 'id'\r\n         */\r\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\r\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\r\n            var m = this._modules2[dependency.id];\r\n            if (!m) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\r\n            }\r\n            if (!m.isComplete()) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\r\n            }\r\n            if (m.error) {\r\n                throw m.error;\r\n            }\r\n            return m.exports;\r\n        };\r\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\r\n            var oldShouldRecordStats = this._config.shouldRecordStats();\r\n            if (shouldOverwrite) {\r\n                this._config = new AMDLoader.Configuration(this._env, params);\r\n            }\r\n            else {\r\n                this._config = this._config.cloneAndMerge(params);\r\n            }\r\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\r\n                this._recorder = null;\r\n            }\r\n        };\r\n        ModuleManager.prototype.getConfig = function () {\r\n            return this._config;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module has been loaded.\r\n         * This means its code is available and has been executed.\r\n         */\r\n        ModuleManager.prototype._onLoad = function (moduleId) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                var defineCall = this._currentAnnonymousDefineCall;\r\n                this._currentAnnonymousDefineCall = null;\r\n                // Hit an anonymous define call\r\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\r\n            }\r\n        };\r\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\r\n            var _this = this;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\r\n            var err = AMDLoader.ensureError(_err);\r\n            err.phase = 'loading';\r\n            err.moduleId = strModuleId;\r\n            err.neededBy = neededBy;\r\n            return err;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module hasn't been loaded.\r\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\r\n         */\r\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\r\n            var error = this._createLoadError(moduleId, err);\r\n            if (!this._modules2[moduleId]) {\r\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\r\n            }\r\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\r\n            var seenModuleId = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                seenModuleId[i] = false;\r\n            }\r\n            var someoneNotified = false;\r\n            var queue = [];\r\n            queue.push(moduleId);\r\n            seenModuleId[moduleId] = true;\r\n            while (queue.length > 0) {\r\n                var queueElement = queue.shift();\r\n                var m = this._modules2[queueElement];\r\n                if (m) {\r\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\r\n                }\r\n                var inverseDeps = this._inverseDependencies2[queueElement];\r\n                if (inverseDeps) {\r\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                        var inverseDep = inverseDeps[i];\r\n                        if (!seenModuleId[inverseDep]) {\r\n                            queue.push(inverseDep);\r\n                            seenModuleId[inverseDep] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!someoneNotified) {\r\n                this._config.onError(error);\r\n            }\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns true if there is such a path or false otherwise.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return false;\r\n            }\r\n            var inQueue = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                inQueue[i] = false;\r\n            }\r\n            var queue = [];\r\n            // Insert 'from' in queue\r\n            queue.push(from);\r\n            inQueue[fromId] = true;\r\n            while (queue.length > 0) {\r\n                // Pop first inserted element of queue\r\n                var element = queue.shift();\r\n                var dependencies = element.dependencies;\r\n                if (dependencies) {\r\n                    // Walk the element's dependencies\r\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                        var dependency = dependencies[i];\r\n                        if (dependency.id === toId) {\r\n                            // There is a path to 'to'\r\n                            return true;\r\n                        }\r\n                        var dependencyModule = this._modules2[dependency.id];\r\n                        if (dependencyModule && !inQueue[dependency.id]) {\r\n                            // Insert 'dependency' in queue\r\n                            inQueue[dependency.id] = true;\r\n                            queue.push(dependencyModule);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // There is no path to 'to'\r\n            return false;\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns cycle as array.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\r\n            if (fromId === toId || depth === 50) {\r\n                return [fromId];\r\n            }\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return null;\r\n            }\r\n            // Walk the element's dependencies\r\n            var dependencies = from.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\r\n                    if (path !== null) {\r\n                        path.push(fromId);\r\n                        return path;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Create the local 'require' that is passed into modules\r\n         */\r\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\r\n            var _this = this;\r\n            var result = (function (dependencies, callback, errorback) {\r\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\r\n            });\r\n            result.toUrl = function (id) {\r\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\r\n            };\r\n            result.getStats = function () {\r\n                return _this.getLoaderEvents();\r\n            };\r\n            result.config = function (params, shouldOverwrite) {\r\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n                _this.configure(params, shouldOverwrite);\r\n            };\r\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._loadModule = function (moduleId) {\r\n            var _this = this;\r\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[moduleId] = true;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var paths = this._config.moduleIdToPaths(strModuleId);\r\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\r\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\r\n                paths.push('node|' + strModuleId);\r\n            }\r\n            var lastPathIndex = -1;\r\n            var loadNextPath = function (err) {\r\n                lastPathIndex++;\r\n                if (lastPathIndex >= paths.length) {\r\n                    // No more paths to try\r\n                    _this._onLoadError(moduleId, err);\r\n                }\r\n                else {\r\n                    var currentPath_1 = paths[lastPathIndex];\r\n                    var recorder_1 = _this.getRecorder();\r\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\r\n                        _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\r\n                        _this._onLoad(moduleId);\r\n                        return;\r\n                    }\r\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\r\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\r\n                        if (_this._config.isBuild()) {\r\n                            _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        }\r\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\r\n                        _this._onLoad(moduleId);\r\n                    }, function (err) {\r\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\r\n                        loadNextPath(err);\r\n                    });\r\n                }\r\n            };\r\n            loadNextPath(null);\r\n        };\r\n        /**\r\n         * Resolve a plugin dependency with the plugin loaded & complete\r\n         * @param module The module that has this dependency\r\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\r\n         * @param plugin The plugin (what the plugin exports)\r\n         */\r\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\r\n            var _this = this;\r\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[pluginDependency.id] = true;\r\n            // Delegate the loading of the resource to the plugin\r\n            var load = (function (value) {\r\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\r\n            });\r\n            load.error = function (err) {\r\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\r\n            };\r\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\r\n        };\r\n        /**\r\n         * Examine the dependencies of module 'module' and resolve them as needed.\r\n         */\r\n        ModuleManager.prototype._resolve = function (module) {\r\n            var _this = this;\r\n            var dependencies = module.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        module.exportsPassedIn = true;\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule && dependencyModule.isComplete()) {\r\n                        if (dependencyModule.error) {\r\n                            module.onDependencyError(dependencyModule.error);\r\n                            return;\r\n                        }\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\r\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\r\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\r\n                        cyclePath.reverse();\r\n                        cyclePath.push(dependency.id);\r\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\r\n                        // Break the cycle\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    // record inverse dependency\r\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\r\n                    this._inverseDependencies2[dependency.id].push(module.id);\r\n                    if (dependency instanceof PluginDependency) {\r\n                        var plugin = this._modules2[dependency.pluginId];\r\n                        if (plugin && plugin.isComplete()) {\r\n                            this._loadPluginDependency(plugin.exports, dependency);\r\n                            continue;\r\n                        }\r\n                        // Record dependency for when the plugin gets loaded\r\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\r\n                        if (!inversePluginDeps) {\r\n                            inversePluginDeps = [];\r\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\r\n                        }\r\n                        inversePluginDeps.push(dependency);\r\n                        this._loadModule(dependency.pluginId);\r\n                        continue;\r\n                    }\r\n                    this._loadModule(dependency.id);\r\n                }\r\n            }\r\n            if (module.unresolvedDependenciesCount === 0) {\r\n                this._onModuleComplete(module);\r\n            }\r\n        };\r\n        ModuleManager.prototype._onModuleComplete = function (module) {\r\n            var _this = this;\r\n            var recorder = this.getRecorder();\r\n            if (module.isComplete()) {\r\n                // already done\r\n                return;\r\n            }\r\n            var dependencies = module.dependencies;\r\n            var dependenciesValues = [];\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        dependenciesValues[i] = module.exports;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        dependenciesValues[i] = {\r\n                            id: module.strId,\r\n                            config: function () {\r\n                                return _this._config.getConfigForModule(module.strId);\r\n                            }\r\n                        };\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule) {\r\n                        dependenciesValues[i] = dependencyModule.exports;\r\n                        continue;\r\n                    }\r\n                    dependenciesValues[i] = null;\r\n                }\r\n            }\r\n            module.complete(recorder, this._config, dependenciesValues);\r\n            // Fetch and clear inverse dependencies\r\n            var inverseDeps = this._inverseDependencies2[module.id];\r\n            this._inverseDependencies2[module.id] = null;\r\n            if (inverseDeps) {\r\n                // Resolve one inverse dependency at a time, always\r\n                // on the lookout for a completed module.\r\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                    var inverseDependencyId = inverseDeps[i];\r\n                    var inverseDependency = this._modules2[inverseDependencyId];\r\n                    inverseDependency.unresolvedDependenciesCount--;\r\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\r\n                        this._onModuleComplete(inverseDependency);\r\n                    }\r\n                }\r\n            }\r\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\r\n            if (inversePluginDeps) {\r\n                // This module is used as a plugin at least once\r\n                // Fetch and clear these inverse plugin dependencies\r\n                this._inversePluginDependencies2.delete(module.id);\r\n                // Resolve plugin dependencies one at a time\r\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\r\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\r\n                }\r\n            }\r\n        };\r\n        return ModuleManager;\r\n    }());\r\n    AMDLoader.ModuleManager = ModuleManager;\r\n})(AMDLoader || (AMDLoader = {}));\r\nvar define;\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var env = new AMDLoader.Environment();\r\n    var moduleManager = null;\r\n    var DefineFunc = function (id, dependencies, callback) {\r\n        if (typeof id !== 'string') {\r\n            callback = dependencies;\r\n            dependencies = id;\r\n            id = null;\r\n        }\r\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\r\n            callback = dependencies;\r\n            dependencies = null;\r\n        }\r\n        if (!dependencies) {\r\n            dependencies = ['require', 'exports', 'module'];\r\n        }\r\n        if (id) {\r\n            moduleManager.defineModule(id, dependencies, callback, null, null);\r\n        }\r\n        else {\r\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\r\n        }\r\n    };\r\n    DefineFunc.amd = {\r\n        jQuery: true\r\n    };\r\n    var _requireFunc_config = function (params, shouldOverwrite) {\r\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n        moduleManager.configure(params, shouldOverwrite);\r\n    };\r\n    var RequireFunc = function () {\r\n        if (arguments.length === 1) {\r\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\r\n                _requireFunc_config(arguments[0]);\r\n                return;\r\n            }\r\n            if (typeof arguments[0] === 'string') {\r\n                return moduleManager.synchronousRequire(arguments[0]);\r\n            }\r\n        }\r\n        if (arguments.length === 2 || arguments.length === 3) {\r\n            if (Array.isArray(arguments[0])) {\r\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\r\n                return;\r\n            }\r\n        }\r\n        throw new Error('Unrecognized require call');\r\n    };\r\n    RequireFunc.config = _requireFunc_config;\r\n    RequireFunc.getConfig = function () {\r\n        return moduleManager.getConfig().getOptionsLiteral();\r\n    };\r\n    RequireFunc.reset = function () {\r\n        moduleManager = moduleManager.reset();\r\n    };\r\n    RequireFunc.getBuildInfo = function () {\r\n        return moduleManager.getBuildInfo();\r\n    };\r\n    RequireFunc.getStats = function () {\r\n        return moduleManager.getLoaderEvents();\r\n    };\r\n    RequireFunc.define = function () {\r\n        return DefineFunc.apply(null, arguments);\r\n    };\r\n    function init() {\r\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\r\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\r\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\r\n                // re-expose node's require function\r\n                var nodeRequire = function (what) {\r\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\r\n                    try {\r\n                        return _nodeRequire_1(what);\r\n                    }\r\n                    finally {\r\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\r\n                    }\r\n                };\r\n                AMDLoader.global.nodeRequire = nodeRequire;\r\n                RequireFunc.nodeRequire = nodeRequire;\r\n                RequireFunc.__$__nodeRequire = nodeRequire;\r\n            }\r\n        }\r\n        if (env.isNode && !env.isElectronRenderer) {\r\n            module.exports = RequireFunc;\r\n            require = RequireFunc;\r\n        }\r\n        else {\r\n            if (!env.isElectronRenderer) {\r\n                AMDLoader.global.define = DefineFunc;\r\n            }\r\n            AMDLoader.global.require = RequireFunc;\r\n        }\r\n    }\r\n    AMDLoader.init = init;\r\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\r\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\r\n        // The global variable require can configure the loader\r\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\r\n            RequireFunc.config(AMDLoader.global.require);\r\n        }\r\n        // This define is for the local closure defined in node in the case that the loader is concatenated\r\n        define = function () {\r\n            return DefineFunc.apply(null, arguments);\r\n        };\r\n        define.amd = DefineFunc.amd;\r\n        if (typeof doNotInitLoader === 'undefined') {\r\n            init();\r\n        }\r\n    }\r\n})(AMDLoader || (AMDLoader = {}));\r\n"]}